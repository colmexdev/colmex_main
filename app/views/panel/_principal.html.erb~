<div>
	<svg id="svg1" width="950" height="600">
	</svg>
</div>

<div>
	<svg id="svg_p" width="500" height="500">
	</svg>
</div>

<script type="text/javascript">
	$.ajax({
		url: "<%= panel_princ_path %>",
		dataType: "JSON",
		success: function(result){
			//Variables para filtrado
			var dataset = crossfilter(result["groups"]);

			var objetosPorTipo = dataset.dimension(function(d){return d["tipo"]});
			var objetosPorFechaUpd = dataset.dimension(function(d){return d["fecha_upd"]});
			var objetosPorFechaGen = dataset.dimension(function(d){return d["fecha_creacion"]});

			//var objetosAgrupadosPorTipo = objetosPorTipo.group();
			//var objetosAgrupadosPorFechaUpd = objetosPorFechaUpd.group();
			//var objetosAgrupadosPorFechaGen = objetosPorFechaGen.group();

			var objetosFiltradosPorFecha = objetosPorFechaUpd.filter(function(d){ return (new Date(d).getTime() >= new Date(result["last_time"]).getTime() && new Date(d).getTime() <= new Date("<%= Date.today %>").getTime())});

			var objetosContadosPorFecha = objetosFiltradosPorFecha.group().reduceCount(function(d){ return d}).top(Infinity);
			var objetosContadosPorTipo = objetosPorTipo.group().reduceCount(function(d){return d}).top(Infinity);
			console.log(objetosContadosPorTipo);

			var fechas_ac = completaFechas(new Date(result["last_time"]),new Date("<%= Date.today %>"));
			var total_upds = 0;
			for(var j=0; j<fechas_ac.length; j++){
				for(var i=0; i<objetosContadosPorFecha.length; i++){
					if(fechas_ac[j]["fecha"].getTime() == new Date(objetosContadosPorFecha[i].key).getTime()){
						total_upds = total_upds + objetosContadosPorFecha[i].value;
						fechas_ac[j]["val"] = objetosContadosPorFecha[i].value;
						break;
					}
				}
			}
			//Variables para graficación
			var margins = {t: 20, b: 20, r: 30, l: 30};
			var sizes = {uc: {w: 950, h: 600}, pc: {w: 500, h: 500}};

			//Gráfica de tiempo (Línea)
			var x = escala('t',[new Date(result["last_time"]),new Date("<%= Date.today %>")],[0,sizes["uc"]["w"]-margins["l"]]);

			var y = escala('l',[0,d3.max(objetosContadosPorFecha,function(d){ return d.value})],[sizes["uc"]["h"]-margins["b"]-margins["t"],0]);

			var xAxis = eje('b',x,30,2,-2,d3.timeFormat("%d/%m"));
			var yAxis = eje('r',y,10,2,-2);

			var svg = d3.select("#svg1");

			var gX = svg.append("g")
				.attr("class", "axis axis-x")
				.attr("transform","translate("+margins["l"]+","+(sizes["uc"]["h"]-margins["b"])+")")
				.call(xAxis);

			var gY = svg.append("g")
				.attr("class", "axis axis-y")
				.attr("transform","translate("+margins["l"]+","+(margins["t"])+")")
				.call(yAxis);

			var linea = d3.line()
				.x(function(d){return x(new Date(d["fecha"]))})
				.y(function(d){return y(d["val"])})
				.curve(d3.curveMonotoneX);

			var uc_line = svg.append("path")
      	.data([fechas_ac])
      	.attr("class", "line")
				.attr("transform","translate("+margins["l"]+","+(margins["t"])+")")
				.attr("fill","none")
				.attr("stroke","black")
      	.attr("d", linea);

			var circulos = svg.selectAll(".nodes")
				.data(fechas_ac)
				.enter().append("circle")
				.attr("transform","translate("+margins["l"]+","+(margins["t"])+")")
				.attr("id",function(d,i){return "punto-" + i})
				.attr("r", "3px")
				.attr("cx", function(d){ return x(new Date(d["fecha"]))})
				.attr("cy", function(d){ return y(d["val"])})
				.attr("stroke", "#dddddd")
				.attr("stroke-width", 2);
				
			//Gráfica de porcentajes (Pastel)
			var svg_p = d3.select("#svg_p")
				.append("g")
				.attr("id","pie_chart");

			var arc = d3.arc()
					.outerRadius(200 - 10)
					.innerRadius(0)
					.padAngle(0.3)
					.padRadius(10);

			/*var labelArc = d3.arc()
					.outerRadius(radius - 40)
					.innerRadius(radius - 40);*/

			var pie = d3.pie()
					.sort(null)
					.value(function(d) { return d.value; });

			var p_c = svg_p.selectAll(".sect")
					.data(pie(objetosContadosPorTipo))
					.enter().append("g")
					.attr("class","sector")
					.append("path")
					.attr("d",arc);
		}
	});
</script>
